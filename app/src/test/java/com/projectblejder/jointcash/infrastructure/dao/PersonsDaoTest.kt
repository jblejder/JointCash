package com.projectblejder.jointcash.infrastructure.dao

import com.projectblejder.jointcash.TestSchedulerRule
import com.projectblejder.jointcash.infrastructure.BaseAppDatabaseTest
import com.projectblejder.jointcash.infrastructure.models.Person
import org.junit.Before
import org.junit.Rule
import org.junit.Test
import org.junit.runner.RunWith
import org.robolectric.RobolectricTestRunner

@RunWith(RobolectricTestRunner::class)
class PersonsDaoTest: BaseAppDatabaseTest() {

    lateinit var persons: PersonsDao

    @get:Rule
    val rxRule = TestSchedulerRule()

    @Test
    fun can_add_persons_with_autogenerated_ids() {
        persons.create(Person(null, "name1"))
        persons.create(Person(null, "name2"))
        persons.create(Person(null, "name3"))

        val test = persons.all().test()
        test.awaitCount(1)

        test.assertValue(listOf(
                Person(1, "name1"),
                Person(2, "name2"),
                Person(3, "name3")
        ))
    }

    @Test
    fun can_delete_person_by_id() {
        persons.create(Person(null, "name1"))
        persons.create(Person(null, "name2"))
        persons.create(Person(null, "name3"))

        persons.deleteById(2)

        val test = persons.all().test()

        test.assertValue(listOf(
                Person(1, "name1"),
                Person(3, "name3")
        ))
    }

    @Before
    fun before() {
        persons = db.persons()
    }
}
