package com.projectblejder.jointcash.infrastructure.dao

import com.projectblejder.jointcash.TestSchedulerRule
import com.projectblejder.jointcash.infrastructure.BaseAppDatabaseTest
import com.projectblejder.jointcash.infrastructure.models.Group
import org.junit.Before
import org.junit.Rule
import org.junit.Test
import org.junit.runner.RunWith
import org.robolectric.RobolectricTestRunner

@RunWith(RobolectricTestRunner::class)
class GroupsDaoTest: BaseAppDatabaseTest() {

    lateinit var groups: GroupsDao

    @get:Rule
    val rxRule = TestSchedulerRule()

    @Test
    fun `can add groups with autogenerated ids`() {
        groups.create(Group(null, "name1"))
        groups.create(Group(null, "name2"))
        groups.create(Group(null, "name3"))

        val test = groups.all().test()
        test.awaitCount(1)

        test.assertValue(listOf(
                Group(1, "name1"),
                Group(2, "name2"),
                Group(3, "name3")
        ))
    }

    @Test
    fun can_delete_person_by_id() {
        groups.create(Group(null, "name1"))
        groups.create(Group(null, "name2"))
        groups.create(Group(null, "name3"))

        groups.deleteById(2)

        val test = groups.all().test()
        test.awaitCount(1)

        test.assertValue(listOf(
                Group(1, "name1"),
                Group(3, "name3")
        ))
    }


    @Before
    fun before() {
        groups = db.groups()
    }
}
